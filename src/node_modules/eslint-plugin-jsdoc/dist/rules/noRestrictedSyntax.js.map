{"version":3,"sources":["../../src/rules/noRestrictedSyntax.js"],"names":["node","context","info","comment","sourceCode","report","options","length","contexts","foundContext","find","cntxt","esquery","matches","parse","visitorKeys","contextStr","message","contextSelected","meta","docs","description","url","fixable","schema","additionalProperties","properties","items","anyOf","type","required"],"mappings":"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","sourcesContent":["import esquery from 'esquery';\nimport iterateJsdoc from '../iterateJsdoc';\n\nexport default iterateJsdoc(({\n  node,\n  context,\n  info: {\n    comment,\n  },\n  sourceCode,\n  report,\n}) => {\n  if (!context.options.length) {\n    report('Rule `no-restricted-syntax` is missing a `context` option.');\n\n    return;\n  }\n\n  const {\n    contexts,\n  } = context.options[0];\n\n  const foundContext = contexts.find((cntxt) => {\n    return typeof cntxt === 'string' ?\n      esquery.matches(node, esquery.parse(cntxt), null, {\n        visitorKeys: sourceCode.visitorKeys,\n      }) :\n      (!cntxt.context || cntxt.context === 'any' || esquery.matches(node, esquery.parse(cntxt.context), null, {\n        visitorKeys: sourceCode.visitorKeys,\n      })) &&\n        comment === cntxt.comment;\n  });\n\n  // We are not on the *particular* matching context/comment, so don't assume\n  //   we need reporting\n  if (!foundContext) {\n    return;\n  }\n\n  const contextStr = typeof foundContext === 'object' ?\n    foundContext.context ?? 'any' :\n    foundContext;\n  const message = foundContext?.message ??\n    'Syntax is restricted: {{context}}' +\n      (comment ? ' with {{comment}}' : '');\n\n  report(message, null, null, {\n    comment,\n    context: contextStr,\n  });\n}, {\n  contextSelected: true,\n  meta: {\n    docs: {\n      description: 'Reports when certain comment structures are present.',\n      url: 'https://github.com/gajus/eslint-plugin-jsdoc#eslint-plugin-jsdoc-rules-no-restricted-syntax',\n    },\n    fixable: 'code',\n    schema: [\n      {\n        additionalProperties: false,\n        properties: {\n          contexts: {\n            items: {\n              anyOf: [\n                {\n                  type: 'string',\n                },\n                {\n                  additionalProperties: false,\n                  properties: {\n                    comment: {\n                      type: 'string',\n                    },\n                    context: {\n                      type: 'string',\n                    },\n                    message: {\n                      type: 'string',\n                    },\n                  },\n                  type: 'object',\n                },\n              ],\n            },\n            type: 'array',\n          },\n        },\n        required: [\n          'contexts',\n        ],\n        type: 'object',\n      },\n    ],\n    type: 'suggestion',\n  },\n});\n"],"file":"noRestrictedSyntax.js"}